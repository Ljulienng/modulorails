# The behavior of RuboCop can be controlled via the .rubocop.yml
# configuration file. It makes it possible to enable/disable
# certain cops (checks) and to alter their behavior if they accept
# any parameters. The file can be placed either in your home
# directory or in some project directory.
#
# RuboCop will start looking for the configuration file in the directory
# where the inspected file is and continue its way up to the root directory.
#
# See https://docs.rubocop.org/rubocop/configuration

# Enabling Rails-specific cops.
require: rubocop-rails

AllCops:
  # Disable all cops by default to ease the migration. This will probably be removed one day.
  DisabledByDefault: true
  # No suggestions since the gem is the sole truth for rubocop configuration.
  SuggestExtensions: false

  # Excluding most directories with generated files and directories with configuration files.
  Exclude:
    - 'vendor/**/*'
    - 'db/**/*'
    - 'tmp/**/*'
    - 'bin/**/*'
    - 'builds/**/*'
    - 'Gemfile'
    - 'config/environments/*'
    - 'config/puma.rb'
    - 'config/spring.rb'
    - 'test/application_system_test_case.rb'
    - 'test/test_helper.rb'
    - 'config/initializers/*.rb'
    - 'spec/spec_helper.rb'
    - 'node_modules/**/*'
    - 'spec/**/*'

# Instructing rubocop about all standard Modulotech environments.
Rails/UnknownEnv:
  Environments:
    - production
    - development
    - test
    - staging
    - preprod
